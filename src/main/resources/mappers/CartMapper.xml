<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="CartMapper">

	<!-- Beans 클래스의 객체이름(id)과 클래스이름(type)를 명시한다. -->
	<resultMap id="cartMap"
		type="hanjiho.project.starbucks.model.Cart">
		<!-- Beans의 멤버변수(property)이름과 대상 테이블의 컬럼(column)을 연결한다. -->
		<result property="cart_id"  column="cart_id" />
		<result property="session_id"  column="session_id" />
		<result property="menu_qty"  column="menu_qty" />
		<result property="reg_date"  column="r_date" />
		<result property="edit_date"  column="e_time" />
		<result property="member_id"  column="member_id" />
		<result property="menu_id"  column="menu_id" />
		<result property="is_direct_order"  column="is_direct_order" />
		
		<!-- menu 테이블 - join -->
		<result property="name"  column="name" />
		<result property="list_img"  column="list_img" />
		<result property="price"  column="price" />
	</resultMap>

	<!-- member 데이터 삭제 서비스계층 -->
	<delete id="deleteMember"
		parameterType="hanjiho.project.starbucks.model.Cart">
		DELETE FROM cart WHERE member_id=#{member_id}
	</delete>
	
	<!-- 일주일 지난 카트 삭제(스케줄러) - edit_date기준 -->
	<delete id="deleteWeek"
		parameterType="hanjiho.project.starbucks.model.Cart">
		DELETE FROM cart WHERE edit_date <![CDATA[ <= ]]> date_add(now(), INTERVAL -7 DAY)
	</delete>
	
	<!-- 단일행 조회를 위한 기능 정의 -->
	<select id="selectItem"
		parameterType="hanjiho.project.starbucks.model.Cart"
		resultMap="cartMap">
		SELECT 
		cart_id, session_id, menu_qty, date_format(c.reg_date, '%Y-%m-%d') as r_date, date_format(c.edit_date, '%Y-%m-%d') as e_date, member_id, menu_id, is_direct_order
		,CONVERT(list_img USING utf8) as list_img , name, price
		FROM cart c
		INNER JOIN menu m ON c.menu_id = m.id
		WHERE cart_id=#{cart_id}
	</select>

	<!-- 다중행 조회를 위한 기능 정의 -->
	<select id="selectList"
		parameterType="hanjiho.project.starbucks.model.Cart"
		resultMap="cartMap">
		SELECT 
		cart_id, session_id, menu_qty, date_format(c.reg_date, '%Y-%m-%d') as r_date, date_format(c.edit_date, '%Y-%m-%d') as e_date, member_id, menu_id, is_direct_order
		,CONVERT(list_img USING utf8) as list_img , name, price
		FROM cart c
		INNER JOIN menu m ON c.menu_id = m.id
		
        <where>
            <choose>
                <when test="member_id != null and member_id != ''">
                    member_id=#{member_id}
                </when>
                <when test="session_id != null and session_id != '' and !session_id.equals('0')">
                    OR session_id=#{session_id}
                </when>
            </choose>
            
            AND is_direct_order = "N"
        </where>

		ORDER BY cart_id DESC
		
		<if test="listCount > 0">
			LIMIT #{offset}, #{listCount}
		</if>
	</select>

	<!-- 데이터 저장을 위한 기능 정의 -->
	<insert id="insertItem"
		parameterType="hanjiho.project.starbucks.model.Cart"
		useGeneratedKeys="true" keyProperty="cart_id">
		INSERT INTO cart (
		session_id, menu_qty, reg_date, edit_date, member_id, menu_id, is_direct_order
		) VALUES (
		#{session_id}, #{menu_qty}, now(), now(), #{member_id}, #{menu_id}, #{is_direct_order}
		)
	</insert>

	<!-- 데이터 삭제를 위한 기능 정의 -->
	<delete id="deleteItem"
		parameterType="hanjiho.project.starbucks.model.Cart">
		DELETE FROM cart 

        <where>
            <choose>
                <when test="member_id != null and member_id != ''">
                    member_id=#{member_id}
                </when>
                <when test="session_id != null and session_id != '' and !session_id.equals('0')">
                    OR session_id=#{session_id}
                </when>
            </choose>
            
            AND cart_id = #{cart_id}
        </where>
	</delete>

	<!-- 데이터 갱신을 위한 기능 정의 -->
	<update id="updateItem"
		parameterType="hanjiho.project.starbucks.model.Cart">
		UPDATE cart SET
		session_id=#{session_id},
		menu_qty=#{menu_qty},
		edit_date=now(),
		member_id=#{member_id},
		is_direct_order=#{is_direct_order}
		WHERE cart_id=#{cart_id}
	</update>
	
	<!-- 로그인 시 세션장바구니 회원정보추가 (member_id추가) -->
	<update id="loginCart"
		parameterType="hanjiho.project.starbucks.model.Cart">
		UPDATE cart SET
		edit_date=now(),
		member_id=#{member_id}
		WHERE session_id=#{session_id} AND is_direct_order="N"
	</update>

	<!-- 데이터 수 조회하기 -->
	<!-- 검색 조건에 맞는 데이터 수를 집계하여 int 타입으로 반환한다. coutn, max, min, sum, avg 함수를 
		사용한 경우, Mapper에서는 resultMap이 아닌 resultType으로 반환한다. -->
	<select id="selectCountAll"
		parameterType="hanjiho.project.starbucks.model.Cart"
		resultType="int">
		SELECT COUNT(*) FROM cart
		
        <where>
            <choose>
                <when test="member_id != null and member_id != ''">
                    member_id=#{member_id}
                </when>
                <when test="session_id != null and session_id != '' and !session_id.equals('0')">
                    OR session_id=#{session_id}
                </when>
            </choose>
            
            AND is_direct_order = "N"
        </where>
	</select>

</mapper>